//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see http://www.gnu.org/licenses/.
// 

package veins.modules.nic;


import veins.modules.phy.PhyLayer80211p;
import veins.modules.mac.ieee80211p.Wave1609_4;

//
// This NIC implements an 802.11p network interface card.
//
// @author David Eckhoff
//
// @see BaseWaveApplLayer
// @see Mac1609_4
// @see PhyLayer80211p
//
module Ip80211p like INic80211p
{
    gates:
        input upperLayerIn; // to upper layers
        output upperLayerOut; // from upper layers
        input radioIn; // radioIn gate for sendDirect

        output upperControlOut @loose; // control information
        input upperControlIn @loose; // control information
        
    submodules:
        phy80211p: PhyLayer80211p {
            @display("p=69,218;i=block/process_s");
        }

        wave1609_4: Wave1609_4 {
            @display("p=69,82");
        }

    connections:
        radioIn --> phy80211p.radioIn;

        wave1609_4.lowerControlOut --> phy80211p.upperControlIn;
        wave1609_4.lowerLayerOut --> phy80211p.upperLayerIn;
        
        phy80211p.upperControlOut --> wave1609_4.lowerControlIn;
        phy80211p.upperLayerOut --> wave1609_4.lowerLayerIn;
        
        wave1609_4.upperLayerIn <-- upperLayerIn;
        wave1609_4.upperLayerOut --> upperLayerOut;

        wave1609_4.upperControlIn <-- upperControlIn;
        wave1609_4.upperControlOut --> upperControlOut;
}
